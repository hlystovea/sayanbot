name: Sayanbot deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return
          pip install -r requirements.txt 
      - name: Test with flake8 and endpoints availability tests
        run: |
          flake8
  copy_files:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: copy start files via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "*,!.git,!.github"
          target: "sayanbot"
          overwrite: true

  deploy:
    runs-on: ubuntu-latest
    needs: copy_files
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd sayanbot
            sudo docker stop sayanbot
            sudo docker rm -f sayanbot 
            sudo docker system prune -f
            echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} > .env
            echo GIS_TOKEN=${{ secrets.GIS_TOKEN }} >> .env
            echo YA_TOKEN=${{ secrets.YA_TOKEN }} >> .env
            echo OP_TOKEN=${{ secrets.OP_TOKEN }} >> .env
            sudo docker build -t sayanbot .
            sudo docker run -d --name sayanbot sayanbot

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} completed successfully!
