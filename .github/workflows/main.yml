name: Sayanbot deploy

on:
  push:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line
          pip install -r requirements.txt 
      - name: Test with flake8 and endpoints availability tests
        run: |
          flake8

  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/sayanbot:latest

  copy_configs:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: copy start files via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{  secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USER  }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yaml"
          target: "~/sayanbot"
          overwrite: true

  deploy:
    runs-on: ubuntu-latest
    needs: copy_configs
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd sayanbot
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/sayanbot:latest
            sudo docker-compose stop
            sudo docker-compose rm sayanbot
            echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} > .env
            echo GIS_TOKEN=${{ secrets.GIS_TOKEN }} >> .env
            echo YA_TOKEN=${{ secrets.YA_TOKEN }} >> .env
            echo OP_TOKEN=${{ secrets.OP_TOKEN }} >> .env
            echo MONGO_URL=${{ secrets.MONGO_URL }} >> .env
            echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env
            echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env
            echo ME_CONFIG_MONGODB_SERVER=${{ secrets.ME_CONFIG_MONGODB_SERVER }} >> .env
            echo ME_CONFIG_MONGODB_ENABLE_ADMIN=${{ secrets.ME_CONFIG_MONGODB_ENABLE_ADMIN }} >> .env
            echo ME_CONFIG_MONGODB_ADMINUSERNAME=${{ secrets.ME_CONFIG_MONGODB_ADMINUSERNAME }} >> .env
            echo ME_CONFIG_MONGODB_ADMINPASSWORD=${{ secrets.ME_CONFIG_MONGODB_ADMINPASSWORD }} >> .env
            echo ME_CONFIG_BASICAUTH_USERNAME=${{ secrets.ME_CONFIG_BASICAUTH_USERNAME }} >> .env
            echo ME_CONFIG_BASICAUTH_PASSWORD=${{ secrets.ME_CONFIG_BASICAUTH_PASSWORD }} >> .env
            sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} completed successfully!
